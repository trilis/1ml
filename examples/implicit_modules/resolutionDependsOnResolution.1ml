import "../../prelude.1ml"

type SQRTABLE = {
    type t
    sqrt: t -> t
}

implicit Squarable_float = {
    type t = primitive "float"
    sqrt = primitive "Float.sqrt"
}

type SUMMABLE = {
    type t
    sum: t -> t -> t
}

implicit Summable_int = {
    type t = int
    sum x y = x + y
}

implicit Summable_float = {
    type t = primitive "float"
    sum x y = primitive "Float.+" (x, y)
}

sqrt [S: SQRTABLE] = S.sqrt
double [S: SUMMABLE] x = S.sum x x

;; should be typed as float -> float
sqrt_double x = double (sqrt x)